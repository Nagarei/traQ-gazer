openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample An Ego Search Support Bot on traQ based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). 
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
tags:
  - name: words
    description: このサービスの根幹のAPI集
  - name: bot
    description: botの通知の設定のAPI集
  - name: list
    description: 一覧を見るためのAPI集
  - name: trend
    description: トレンドのためのAPI集
  - name: similar
    description: おすすめのためのAPI集
paths:
  /words:
    post:
      tags:
        - words
      summary: wordの登録
      description: wordの登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordRequest'
      responses:
        '200':
          description: Successful registration
        '400':
          description: Invalid input
    delete:
      tags:
        - words
      summary: wordの削除
      description: wordの削除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordDelete'
      responses:
        '200':
          description: Successful deletion
        '400':
          description: Invalid input
    put:
      tags:
        - bot
      summary: bot投稿に対する通知設定
      description: 各wordに対してbotが投稿したものについても通知するか決める
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordBotSetting'
      responses:
        '200':
          description: Successful deletion
        '400':
          description: Invalid input
    get:
      tags:
        - words
      summary: 全データの取得
      description: 全データの取得
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordsAllList'
  /words/bot:
    post:
      tags:
        - bot
      summary: 特定のUserの通知の一括変更
      description: 特定のUserの通知の全てを一括変更
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Bot'
      responses:
        '200':
          description: Successful deletion
        '404':
          description: User not found
  /list/{userId}:
    get:
      tags:
        - list
      summary: あるuserのwordたち
      description: userの登録しているwordの取得
      parameters:
        - in: path
          name: userId
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordsList'
        '404':
          description: User not found
  /list/{word}:
    get:
      tags:
        - list
      summary: ある単語を見ているuserたち
      description: ある単語を登録しているuserの取得
      parameters:
        - in: path
          name: word
          description: The word to search for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
        '404':
          description: Word not found
  /trend/day/today:
    get:
      tags:
        - trend
      summary: 今日のトレンド
      description: 今日最も追加されたwordの取得
      operationId: getTodayTrendingWords
      parameters:
        - name: n
          in: query
          description: 返すwordの数
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingWords'
  /trend/day/{day}:
    parameters:
      - name: day
        in: path
        description: Specific day in the format "YYYY-MM-DD"
        required: true
        schema:
          type: string
          format: date
    get:
      tags:
        - trend
      summary: ある日のトレンド
      description: 特定の日に最も追加されたwordの取得
      operationId: getTrendingWordsForDay
      parameters:
        - name: n
          in: query
          description: 返すwordの数
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingWords'
  /trend/month/{month}:
    parameters:
      - name: month
        in: path
        description: Specific month in the format "YYYY-MM"
        required: true
        schema:
          type: string
          format: date
    get:
      tags:
        - trend
      summary: ある月のトレンド
      description: 特定の月に最も追加されたwordの取得
      operationId: getTrendingWordsForMonth
      parameters:
        - name: n
          in: query
          description: 返すwordの数
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingWords'
  /trend/year/{year}:
    parameters:
      - name: year
        in: path
        description: Specific year in the format "YYYY"
        required: true
        schema:
          type: string
          format: date
    get:
      tags:
        - trend
      summary: ある年のトレンド
      description: 特定の年に最も追加されたwordの取得
      operationId: getTrendingWordsForYear
      parameters:
        - name: n
          in: query
          description: 返すwordの数
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingWords'
  /similar/{userId}:
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
    get:
      tags:
        - similar
      summary: 似たような者を探す
      description: 特定のuserと同じような単語を登録しているuserの取得
      operationId: getUsersWithSimilarWords
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarUsers'
  /similar/{userId}/recommend:
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
    get:
      tags:
        - similar
      summary: おすすめの単語を出す
      description: 特定のuserと同じような単語を登録しているuserが登録している単語の取得
      operationId: getRecommendedWordsForUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedWords'

components:
  schemas:
    WordRequest:
      type: object
      description: sessionからuserIdを取る
      properties:
        word:
          type: string
        includeBot:
          type: boolean
    WordDelete:
      type: object
      description: sessionからuserIdを取る
      properties:
        word:
          type: string
    WordBotSetting:
      type: object
      description: sessionからuserIdを取る
      properties:
        word:
          type: string
        includeBot:
          type: boolean
    WordsAllList:
      type: array
      items:
        $ref: '#/components/schemas/WordAllList'
    WordAllList:
      type: object
      properties:
        userId:
          type: string
        word:
          type: string
        time:
          type: string
        includeBot:
          type: boolean
    WordsList:
      type: array
      items:
        $ref: '#/components/schemas/WordListItem'
    WordListItem:
      type: object
      properties:
        word:
          type: string
        time:
          type: string
        includeBot:
          type: boolean
    UsersList:
      type: array
      items:
        $ref: '#/components/schemas/UserList'
    UserList:
      type: object
      properties:
        userId:
          type: string
        time:
          type: string
        includeBot:
          type: boolean
    TrendingWords:
      type: array
      items:
        $ref: '#/components/schemas/TrendingWord'
    TrendingWord:
      type: object
      properties:
        number:
          type: integer
          example: 1
        word:
          type: string
          example: "example"
    SimilarUsers:
      type: array
      items:
        $ref: '#/components/schemas/SimilarUser'
    SimilarUser:
      type: object
      properties:
        userId:
          type: string
    RecommendedWords:
      type: array
      items:
        $ref: '#/components/schemas/RecommendedWord'
    RecommendedWord:
      type: object
      properties:
        number:
          type: integer
          example: 1
        word:
          type: string
          example: "example"
    Bot:
      type: object
      description: sessionからuserIdを取る
      properties:
        includeBot:
          type: boolean
          example: true
